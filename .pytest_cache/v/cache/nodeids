[
  "test_devices.py::test_get_device",
  "test_devices.py::test_find_devices",
  "test_devices.py::test_make_device",
  "test_devices.py::test_make_device_gives_errors[(AND1_ID, new_devices.AND, 17)-new_devices.INVALID_QUALIFIER]",
  "test_devices.py::test_make_device_gives_errors[(SW1_ID, new_devices.SWITCH, None)-new_devices.NO_QUALIFIER]",
  "test_devices.py::test_make_device_gives_errors[(X1_ID, new_devices.XOR, 2)-new_devices.QUALIFIER_PRESENT]",
  "test_devices.py::test_make_device_gives_errors[(D_ID, D_ID, None)-new_devices.BAD_DEVICE]",
  "test_devices.py::test_make_device_gives_errors[(CL_ID, new_devices.CLOCK, 0)-new_devices.INVALID_QUALIFIER]",
  "test_devices.py::test_make_device_gives_errors[(CL_ID, new_devices.CLOCK, 10)-new_devices.NO_ERROR]",
  "test_devices.py::test_make_device_gives_errors[(X2_ID, new_devices.XOR)-new_devices.DEVICE_PRESENT]",
  "test_devices.py::test_get_signal_name",
  "test_devices.py::test_get_signal_ids",
  "test_devices.py::test_set_switch",
  "test_monitors.py::test_make_monitor",
  "test_monitors.py::test_make_monitor_gives_errors",
  "test_monitors.py::test_remove_monitor",
  "test_monitors.py::test_get_signal_names",
  "test_monitors.py::test_record_signals",
  "test_monitors.py::test_get_margin",
  "test_monitors.py::test_reset_monitors",
  "test_monitors.py::test_display_signals",
  "test_names.py::test_get_name_string_raises_exceptions",
  "test_names.py::test_get_name_string[0-Chang]",
  "test_names.py::test_get_name_string[1-Ethan]",
  "test_names.py::test_get_name_string[2-Ilakya]",
  "test_names.py::test_get_name_string[3-None]",
  "test_names.py::test_query_raises_exceptions",
  "test_names.py::test_query[Chang-0]",
  "test_names.py::test_query[Ethan-1]",
  "test_names.py::test_query[Ilakya-2]",
  "test_network.py::test_get_connected_output",
  "test_network.py::test_get_input_signal",
  "test_network.py::test_get_output_signal",
  "test_network.py::test_check_network",
  "test_network.py::test_make_connection",
  "test_network.py::test_make_connection_gives_error[(I1, I1, OR1_ID, I2)-network.DEVICE_ABSENT]",
  "test_network.py::test_make_connection_gives_error[(OR1_ID, I2, OR1_ID, I2)-network.INPUT_TO_INPUT]",
  "test_network.py::test_make_connection_gives_error[(SW1_ID, None, OR1_ID, None)-network.OUTPUT_TO_OUTPUT]",
  "test_network.py::test_make_connection_gives_error[(SW1_ID, I1, OR1_ID, I2)-network.PORT_ABSENT]",
  "test_network.py::test_make_connection_gives_error[(SW2_ID, None, OR1_ID, I2)-network.NO_ERROR]",
  "test_network.py::test_make_connection_gives_error[(OR1_ID, I2, SW2_ID, None)-network.NO_ERROR]",
  "test_network.py::test_make_connection_gives_error[(SW1_ID, None, OR1_ID, I1)-network.INPUT_CONNECTED]",
  "test_network.py::test_execute_xor",
  "test_network.py::test_execute_non_xor_gates[AND1_ID-switch_outputs0-LOW-devices.AND]",
  "test_network.py::test_execute_non_xor_gates[AND1_ID-switch_outputs1-HIGH-devices.AND]",
  "test_network.py::test_execute_non_xor_gates[NAND1_ID-switch_outputs2-LOW-devices.NAND]",
  "test_network.py::test_execute_non_xor_gates[NAND1_ID-switch_outputs3-HIGH-devices.NAND]",
  "test_network.py::test_execute_non_xor_gates[OR1_ID-switch_outputs4-LOW-devices.OR]",
  "test_network.py::test_execute_non_xor_gates[OR1_ID-switch_outputs5-HIGH-devices.OR]",
  "test_network.py::test_execute_non_xor_gates[NOR1_ID-switch_outputs6-LOW-devices.NOR]",
  "test_network.py::test_execute_non_xor_gates[NOR1_ID-switch_outputs7-HIGH-devices.NOR]",
  "test_network.py::test_execute_non_gates",
  "test_network.py::test_oscillating_network",
  "test_parse.py::test_find_header",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_1.txt-1]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_2.txt-2]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_3.txt-3]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_4.txt-4]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_5.txt-5]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_6.txt-6]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_7.txt-7]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_8.txt-8]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_9.txt-9]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_10.txt-10]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_11.txt-11]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_12.txt-12]",
  "test_parse.py::test_DEVICES_errors[test_files/test_DEVICES_section_13.txt-13]",
  "test_parse.py::test_DEVICES_section",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_1.txt-1]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_2.txt-2]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_3.txt-3]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_4.txt-4]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_5.txt-5]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_6.txt-6]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_7.txt-7]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_8.txt-8]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_9.txt-9]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_10.txt-10]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_11.txt-11]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_12.txt-12]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_13.txt-13]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_14.txt-14]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_15.txt-15]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_16.txt-16]",
  "test_parse.py::test_CON_errors[test_files/test_CON_section_17.txt-17]",
  "test_parse.py::test_CON_section",
  "test_parse.py::test_MONITORS_errors[test_files/test_MONITORS_section_1.txt-1]",
  "test_parse.py::test_MONITORS_errors[test_files/test_MONITORS_section_2.txt-2]",
  "test_parse.py::test_MONITORS_errors[test_files/test_MONITORS_section_3.txt-3]",
  "test_parse.py::test_MONITORS_errors[test_files/test_MONITORS_section_4.txt-4]",
  "test_parse.py::test_MONITORS_errors[test_files/test_MONITORS_section_5.txt-5]",
  "test_parse.py::test_MONITORS_all",
  "test_parse.py::test_NETWORK",
  "test_scanner.py::test_file_not_found",
  "test_scanner.py::test_file_as_list",
  "test_scanner.py::test_skip_spaces",
  "test_scanner.py::test_advance",
  "test_scanner.py::test_get_name",
  "test_scanner.py::test_get_number",
  "test_scanner.py::test_raise_comment_errors",
  "test_scanner.py::test_ignore_comment",
  "test_scanner.py::test_invalid_char_error",
  "test_scanner.py::test_line_and_char_count"
]